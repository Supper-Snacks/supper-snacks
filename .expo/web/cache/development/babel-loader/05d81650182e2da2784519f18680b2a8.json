{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { auth } from \"../firebase\";\nimport { MainScreen, Ex1Incorrect, Ex1Solution, Ex2Solution, Ex1SolutionRedux, CountRedux, AuthScreen, LoginScreen, UsersScreen, HomeScreen } from \"../screens\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar TodoStack = createNativeStackNavigator();\n\nvar AppNavigator = function AppNavigator() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuth = _useState2[0],\n      setIsAuth = _useState2[1];\n\n  useEffect(function () {\n    var subscriber = onAuthStateChanged(auth, function (authUser) {\n      if (authUser) {\n        setIsAuth(true);\n        console.log('true');\n      } else {\n        setIsAuth(false);\n        console.log('false');\n      }\n    });\n    return function () {\n      return subscriber();\n    };\n  }, []);\n\n  var MainNavigator = function MainNavigator() {\n    return _jsxs(Stack.Navigator, {\n      initialRouteName: \"Main\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Main\",\n        options: {\n          title: 'Orbital 22 React Native Workshop'\n        },\n        component: MainScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Ex1Incorrect\",\n        options: {\n          title: 'Exercise 1 (Incorrect)'\n        },\n        component: Ex1Incorrect\n      }), _jsx(Stack.Screen, {\n        name: \"Ex1Solution\",\n        options: {\n          title: 'Exercise 1 (Solution)'\n        },\n        component: Ex1Solution\n      }), _jsx(Stack.Screen, {\n        name: \"Ex1SolutionRedux\",\n        options: {\n          title: 'Exercise 1 (Solution Redux)'\n        },\n        component: Ex1SolutionRedux\n      }), _jsx(Stack.Screen, {\n        name: \"Ex2Solution\",\n        options: {\n          title: 'Exercise 2 (Solution)'\n        },\n        component: Ex2Solution\n      }), _jsx(Stack.Screen, {\n        name: \"CountRedux\",\n        options: {\n          title: 'Count with specific input'\n        },\n        component: CountRedux\n      }), _jsx(Stack.Screen, {\n        name: \"Auth\",\n        options: {\n          headerTitle: 'Todo List'\n        },\n        component: AuthScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Users\",\n        options: {\n          headerShown: false\n        },\n        component: UsersScreen\n      })]\n    });\n  };\n\n  var logoutHandler = function logoutHandler() {\n    signOut(auth).then(function () {\n      setIsAuth(false);\n    });\n  };\n\n  var LogoutIcon = function LogoutIcon() {\n    return _jsx(TouchableOpacity, {\n      onPress: logoutHandler,\n      children: _jsx(MaterialIcons, {\n        name: \"logout\",\n        size: 28,\n        color: \"#407BFF\"\n      })\n    });\n  };\n\n  var TodoNavigator = function TodoNavigator() {\n    return _jsx(TodoStack.Navigator, {\n      children: _jsx(TodoStack.Screen, {\n        name: \"Home\",\n        options: {\n          headerTitle: 'Home',\n          headerRight: function headerRight() {\n            return _jsx(LogoutIcon, {});\n          }\n        },\n        component: HomeScreen\n      })\n    });\n  };\n\n  return _jsx(NavigationContainer, {\n    children: isAuth ? _jsx(TodoNavigator, {}) : _jsx(MainNavigator, {})\n  });\n};\n\nexport default AppNavigator;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","onAuthStateChanged","signOut","MaterialIcons","auth","MainScreen","Ex1Incorrect","Ex1Solution","Ex2Solution","Ex1SolutionRedux","CountRedux","AuthScreen","LoginScreen","UsersScreen","HomeScreen","Stack","TodoStack","AppNavigator","isAuth","setIsAuth","subscriber","authUser","console","log","MainNavigator","title","headerTitle","headerShown","logoutHandler","then","LogoutIcon","TodoNavigator","headerRight"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/src/navigation/AppNavigator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nimport { auth } from '../firebase';\r\nimport {\r\n    MainScreen,\r\n    Ex1Incorrect,\r\n    Ex1Solution,\r\n    Ex2Solution,\r\n    Ex1SolutionRedux,\r\n    CountRedux,\r\n    AuthScreen,\r\n    LoginScreen,\r\n    UsersScreen,\r\n    HomeScreen,\r\n} from '../screens';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst TodoStack = createNativeStackNavigator();\r\n\r\nconst AppNavigator = () => {\r\n    /**\r\n     * This hook serves as a listener to auth state changes provided by firebase.\r\n     */\r\n    // Todo: isAuth hook\r\n    const [isAuth, setIsAuth] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Todo: Authentication\r\n        const subscriber = onAuthStateChanged(auth, (authUser) => {\r\n            if (authUser) {\r\n                setIsAuth(true);\r\n                console.log('true');\r\n            } else {\r\n                setIsAuth(false);\r\n                console.log('false');\r\n            }\r\n        })\r\n\r\n        return () => subscriber();\r\n    }, []);\r\n\r\n    const MainNavigator = () => (\r\n        <Stack.Navigator initialRouteName=\"Main\">\r\n            <Stack.Screen\r\n                name=\"Main\"\r\n                options={{ title: 'Orbital 22 React Native Workshop' }}\r\n                component={MainScreen}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Ex1Incorrect\"\r\n                options={{ title: 'Exercise 1 (Incorrect)' }}\r\n                component={Ex1Incorrect}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Ex1Solution\"\r\n                options={{ title: 'Exercise 1 (Solution)' }}\r\n                component={Ex1Solution}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Ex1SolutionRedux\"\r\n                options={{ title: 'Exercise 1 (Solution Redux)' }}\r\n                component={Ex1SolutionRedux}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Ex2Solution\"\r\n                options={{ title: 'Exercise 2 (Solution)' }}\r\n                component={Ex2Solution}\r\n            />\r\n            <Stack.Screen\r\n                name=\"CountRedux\"\r\n                options={{ title: 'Count with specific input' }}\r\n                component={CountRedux}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Auth\"\r\n                options={{ headerTitle: 'Todo List' }}\r\n                component={AuthScreen}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Users\"\r\n                options={{ headerShown: false }}\r\n                component={UsersScreen}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n\r\n    const logoutHandler = () => {\r\n        // Todo: Authentication\r\n        signOut(auth).then(() => {\r\n            setIsAuth(false);\r\n        })\r\n    };\r\n\r\n    const LogoutIcon = () => (\r\n        <TouchableOpacity onPress={logoutHandler}>\r\n            <MaterialIcons name=\"logout\" size={28} color=\"#407BFF\" />\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    const TodoNavigator = () => (\r\n        <TodoStack.Navigator>\r\n            <TodoStack.Screen\r\n                name=\"Home\"\r\n                options={{\r\n                    headerTitle: 'Home',\r\n                    headerRight: () => <LogoutIcon />,\r\n                }}\r\n                component={HomeScreen}\r\n            />\r\n        </TodoStack.Navigator>\r\n    );\r\n\r\n    return (\r\n        <NavigationContainer>\r\n            {isAuth ? <TodoNavigator /> : <MainNavigator />}\r\n        </NavigationContainer>\r\n    );\r\n};\r\n\r\nexport default AppNavigator;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAA4C,eAA5C;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,SAASC,IAAT;AACA,SACIC,UADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,gBALJ,EAMIC,UANJ,EAOIC,UAPJ,EAQIC,WARJ,EASIC,WATJ,EAUIC,UAVJ;;;AAaA,IAAMC,KAAK,GAAGf,0BAA0B,EAAxC;AACA,IAAMgB,SAAS,GAAGhB,0BAA0B,EAA5C;;AAEA,IAAMiB,YAAY,GAAG,SAAfA,YAAe,GAAM;EAKvB,gBAA4BpB,QAAQ,CAAC,KAAD,CAApC;EAAA;EAAA,IAAOqB,MAAP;EAAA,IAAeC,SAAf;;EAEArB,SAAS,CAAC,YAAM;IAEZ,IAAMsB,UAAU,GAAGnB,kBAAkB,CAACG,IAAD,EAAO,UAACiB,QAAD,EAAc;MACtD,IAAIA,QAAJ,EAAc;QACVF,SAAS,CAAC,IAAD,CAAT;QACAG,OAAO,CAACC,GAAR,CAAY,MAAZ;MACH,CAHD,MAGO;QACHJ,SAAS,CAAC,KAAD,CAAT;QACAG,OAAO,CAACC,GAAR,CAAY,OAAZ;MACH;IACJ,CARoC,CAArC;IAUA,OAAO;MAAA,OAAMH,UAAU,EAAhB;IAAA,CAAP;EACH,CAbQ,EAaN,EAbM,CAAT;;EAeA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB;IAAA,OAClB,MAAC,KAAD,CAAO,SAAP;MAAiB,gBAAgB,EAAC,MAAlC;MAAA,WACI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,MADT;QAEI,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAT,CAFb;QAGI,SAAS,EAAEpB;MAHf,EADJ,EAMI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,cADT;QAEI,OAAO,EAAE;UAAEoB,KAAK,EAAE;QAAT,CAFb;QAGI,SAAS,EAAEnB;MAHf,EANJ,EAWI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,aADT;QAEI,OAAO,EAAE;UAAEmB,KAAK,EAAE;QAAT,CAFb;QAGI,SAAS,EAAElB;MAHf,EAXJ,EAgBI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,kBADT;QAEI,OAAO,EAAE;UAAEkB,KAAK,EAAE;QAAT,CAFb;QAGI,SAAS,EAAEhB;MAHf,EAhBJ,EAqBI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,aADT;QAEI,OAAO,EAAE;UAAEgB,KAAK,EAAE;QAAT,CAFb;QAGI,SAAS,EAAEjB;MAHf,EArBJ,EA0BI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,YADT;QAEI,OAAO,EAAE;UAAEiB,KAAK,EAAE;QAAT,CAFb;QAGI,SAAS,EAAEf;MAHf,EA1BJ,EA+BI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,MADT;QAEI,OAAO,EAAE;UAAEgB,WAAW,EAAE;QAAf,CAFb;QAGI,SAAS,EAAEf;MAHf,EA/BJ,EAoCI,KAAC,KAAD,CAAO,MAAP;QACI,IAAI,EAAC,OADT;QAEI,OAAO,EAAE;UAAEgB,WAAW,EAAE;QAAf,CAFb;QAGI,SAAS,EAAEd;MAHf,EApCJ;IAAA,EADkB;EAAA,CAAtB;;EA6CA,IAAMe,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAExB1B,OAAO,CAACE,IAAD,CAAP,CAAcyB,IAAd,CAAmB,YAAM;MACrBV,SAAS,CAAC,KAAD,CAAT;IACH,CAFD;EAGH,CALD;;EAOA,IAAMW,UAAU,GAAG,SAAbA,UAAa;IAAA,OACf,KAAC,gBAAD;MAAkB,OAAO,EAAEF,aAA3B;MAAA,UACI,KAAC,aAAD;QAAe,IAAI,EAAC,QAApB;QAA6B,IAAI,EAAE,EAAnC;QAAuC,KAAK,EAAC;MAA7C;IADJ,EADe;EAAA,CAAnB;;EAMA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;IAAA,OAClB,KAAC,SAAD,CAAW,SAAX;MAAA,UACI,KAAC,SAAD,CAAW,MAAX;QACI,IAAI,EAAC,MADT;QAEI,OAAO,EAAE;UACLL,WAAW,EAAE,MADR;UAELM,WAAW,EAAE;YAAA,OAAM,KAAC,UAAD,KAAN;UAAA;QAFR,CAFb;QAMI,SAAS,EAAElB;MANf;IADJ,EADkB;EAAA,CAAtB;;EAaA,OACI,KAAC,mBAAD;IAAA,UACKI,MAAM,GAAG,KAAC,aAAD,KAAH,GAAuB,KAAC,aAAD;EADlC,EADJ;AAKH,CAlGD;;AAoGA,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}