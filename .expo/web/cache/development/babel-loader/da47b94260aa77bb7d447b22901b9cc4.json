{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { incrementByInput, decrementByInput } from \"../store/count\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CountRedux = function CountRedux() {\n  var dispatch = useDispatch();\n  var count = useSelector(function (state) {\n    return state.countStore.count;\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var increment = function increment() {\n    dispatch(incrementByInput({\n      input: parseInt(input)\n    }));\n  };\n\n  var decrement = function decrement() {\n    dispatch(decrementByInput({\n      input: parseInt(input)\n    }));\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Counter: \" + count\n    }), _jsx(TextInput, {\n      value: input.toString(),\n      onChangeText: setInput,\n      style: styles.textInput,\n      keyboardType: \"decimal-pad\"\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(View, {\n        style: styles.subButtonContainer,\n        children: _jsx(Button, {\n          title: \"Add\",\n          onPress: increment\n        })\n      }), _jsx(View, {\n        style: styles.subButtonContainer,\n        children: _jsx(Button, {\n          title: \"Sub\",\n          onPress: decrement\n        })\n      }), _jsx(View, {\n        style: styles.subButtonContainer,\n        children: _jsx(Button, {\n          title: \"Reset\",\n          onPress: function onPress() {\n            return setInput('');\n          }\n        })\n      })]\n    })]\n  });\n};\n\nexport default CountRedux;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#EBECF0',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    width: '60%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  subButtonContainer: {\n    width: '30%'\n  },\n  text: {\n    marginVertical: 10\n  },\n  textInput: {\n    alignSelf: 'center',\n    borderWidth: 2,\n    borderColor: '#3F3F3F',\n    borderRadius: 4,\n    width: '60%',\n    paddingHorizontal: 8,\n    textAlign: 'center',\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","useState","useSelector","useDispatch","incrementByInput","decrementByInput","CountRedux","dispatch","count","state","countStore","input","setInput","increment","parseInt","decrement","styles","container","text","toString","textInput","buttonContainer","subButtonContainer","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","width","flexDirection","marginVertical","alignSelf","borderWidth","borderColor","borderRadius","paddingHorizontal","textAlign","marginBottom"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/src/screens/CountRedux.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\r\n// Todo\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { incrementByInput, decrementByInput } from '../store/count';\r\n\r\nconst CountRedux = () => {\r\n    const dispatch = useDispatch();\r\n    const count = useSelector(state => state.countStore.count);\r\n\r\n    const [input, setInput] = useState(0);\r\n\r\n    // Todo\r\n    const increment = () => {\r\n        dispatch(incrementByInput({ input: parseInt(input) }))\r\n    };\r\n\r\n    const decrement = () => {\r\n        dispatch(decrementByInput({ input: parseInt(input) }))\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>{`Counter: ${count}`}</Text>\r\n            <TextInput\r\n                value={input.toString()}\r\n                onChangeText={setInput}\r\n                style={styles.textInput}\r\n                keyboardType=\"decimal-pad\"\r\n            />\r\n            <View style={styles.buttonContainer}>\r\n                <View style={styles.subButtonContainer}>\r\n                    <Button title=\"Add\" onPress={increment} />\r\n                </View>\r\n                <View style={styles.subButtonContainer}>\r\n                    <Button title=\"Sub\" onPress={decrement} />\r\n                </View>\r\n                <View style={styles.subButtonContainer}>\r\n                    <Button title=\"Reset\" onPress={() => setInput('')} />\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default CountRedux;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#EBECF0',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonContainer: {\r\n        width: '60%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    subButtonContainer: {\r\n        width: '30%',\r\n    },\r\n    text: {\r\n        marginVertical: 10,\r\n    },\r\n    textInput: {\r\n        alignSelf: 'center',\r\n        borderWidth: 2,\r\n        borderColor: '#3F3F3F',\r\n        borderRadius: 4,\r\n        width: '60%',\r\n        paddingHorizontal: 8,\r\n        textAlign: 'center',\r\n        marginBottom: 10,\r\n    },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACrB,IAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,IAAMK,KAAK,GAAGN,WAAW,CAAC,UAAAO,KAAK;IAAA,OAAIA,KAAK,CAACC,UAAN,CAAiBF,KAArB;EAAA,CAAN,CAAzB;;EAEA,gBAA0BP,QAAQ,CAAC,CAAD,CAAlC;EAAA;EAAA,IAAOU,KAAP;EAAA,IAAcC,QAAd;;EAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpBN,QAAQ,CAACH,gBAAgB,CAAC;MAAEO,KAAK,EAAEG,QAAQ,CAACH,KAAD;IAAjB,CAAD,CAAjB,CAAR;EACH,CAFD;;EAIA,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpBR,QAAQ,CAACF,gBAAgB,CAAC;MAAEM,KAAK,EAAEG,QAAQ,CAACH,KAAD;IAAjB,CAAD,CAAjB,CAAR;EACH,CAFD;;EAIA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEK,MAAM,CAACC,SAApB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,IAApB;MAAA,wBAAuCV;IAAvC,EADJ,EAEI,KAAC,SAAD;MACI,KAAK,EAAEG,KAAK,CAACQ,QAAN,EADX;MAEI,YAAY,EAAEP,QAFlB;MAGI,KAAK,EAAEI,MAAM,CAACI,SAHlB;MAII,YAAY,EAAC;IAJjB,EAFJ,EAQI,MAAC,IAAD;MAAM,KAAK,EAAEJ,MAAM,CAACK,eAApB;MAAA,WACI,KAAC,IAAD;QAAM,KAAK,EAAEL,MAAM,CAACM,kBAApB;QAAA,UACI,KAAC,MAAD;UAAQ,KAAK,EAAC,KAAd;UAAoB,OAAO,EAAET;QAA7B;MADJ,EADJ,EAII,KAAC,IAAD;QAAM,KAAK,EAAEG,MAAM,CAACM,kBAApB;QAAA,UACI,KAAC,MAAD;UAAQ,KAAK,EAAC,KAAd;UAAoB,OAAO,EAAEP;QAA7B;MADJ,EAJJ,EAOI,KAAC,IAAD;QAAM,KAAK,EAAEC,MAAM,CAACM,kBAApB;QAAA,UACI,KAAC,MAAD;UAAQ,KAAK,EAAC,OAAd;UAAsB,OAAO,EAAE;YAAA,OAAMV,QAAQ,CAAC,EAAD,CAAd;UAAA;QAA/B;MADJ,EAPJ;IAAA,EARJ;EAAA,EADJ;AAsBH,CArCD;;AAuCA,eAAeN,UAAf;AAEA,IAAMU,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC7BP,SAAS,EAAE;IACPQ,eAAe,EAAE,SADV;IAEPC,IAAI,EAAE,CAFC;IAGPC,cAAc,EAAE,QAHT;IAIPC,UAAU,EAAE;EAJL,CADkB;EAO7BP,eAAe,EAAE;IACbQ,KAAK,EAAE,KADM;IAEbC,aAAa,EAAE,KAFF;IAGbH,cAAc,EAAE;EAHH,CAPY;EAY7BL,kBAAkB,EAAE;IAChBO,KAAK,EAAE;EADS,CAZS;EAe7BX,IAAI,EAAE;IACFa,cAAc,EAAE;EADd,CAfuB;EAkB7BX,SAAS,EAAE;IACPY,SAAS,EAAE,QADJ;IAEPC,WAAW,EAAE,CAFN;IAGPC,WAAW,EAAE,SAHN;IAIPC,YAAY,EAAE,CAJP;IAKPN,KAAK,EAAE,KALA;IAMPO,iBAAiB,EAAE,CANZ;IAOPC,SAAS,EAAE,QAPJ;IAQPC,YAAY,EAAE;EARP;AAlBkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}