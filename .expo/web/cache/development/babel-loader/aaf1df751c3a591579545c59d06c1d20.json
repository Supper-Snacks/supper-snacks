{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport useLayoutEffect from \"../useLayoutEffect\";\nimport UIManager from \"../../exports/UIManager\";\nvar DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\nvar didWarn = !canUseDOM;\nvar resizeObserver = null;\n\nfunction getResizeObserver() {\n  if (canUseDOM && typeof window.ResizeObserver !== 'undefined') {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach(function (entry) {\n          var node = entry.target;\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n\n          if (typeof onLayout === 'function') {\n            UIManager.measure(node, function (x, y, width, height, left, top) {\n              var event = {\n                nativeEvent: {\n                  layout: {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    left: left,\n                    top: top\n                  }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, 'target', {\n                enumerable: true,\n                get: function get() {\n                  return entry.target;\n                }\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (\"development\" !== 'production' && \"development\" !== 'test') {\n      console.warn('onLayout relies on ResizeObserver which is not supported by your browser. ' + 'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');\n      didWarn = true;\n    }\n  }\n\n  return resizeObserver;\n}\n\nexport default function useElementLayout(ref, onLayout) {\n  var observer = getResizeObserver();\n  useLayoutEffect(function () {\n    var node = ref.current;\n\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]);\n  useLayoutEffect(function () {\n    var node = ref.current;\n\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n\n    return function () {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}","map":{"version":3,"names":["canUseDOM","useLayoutEffect","UIManager","DOM_LAYOUT_HANDLER_NAME","didWarn","resizeObserver","getResizeObserver","window","ResizeObserver","entries","forEach","entry","node","target","onLayout","measure","x","y","width","height","left","top","event","nativeEvent","layout","timeStamp","Date","now","Object","defineProperty","enumerable","get","console","warn","useElementLayout","ref","observer","current","observe","unobserve"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/node_modules/react-native-web/dist/modules/useElementLayout/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\nimport useLayoutEffect from '../useLayoutEffect';\r\nimport UIManager from '../../exports/UIManager';\r\nvar DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\r\nvar didWarn = !canUseDOM;\r\nvar resizeObserver = null;\r\n\r\nfunction getResizeObserver() {\r\n  if (canUseDOM && typeof window.ResizeObserver !== 'undefined') {\r\n    if (resizeObserver == null) {\r\n      resizeObserver = new window.ResizeObserver(function (entries) {\r\n        entries.forEach(function (entry) {\r\n          var node = entry.target;\r\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\r\n\r\n          if (typeof onLayout === 'function') {\r\n            // We still need to measure the view because browsers don't yet provide\r\n            // border-box dimensions in the entry\r\n            UIManager.measure(node, function (x, y, width, height, left, top) {\r\n              var event = {\r\n                // $FlowFixMe\r\n                nativeEvent: {\r\n                  layout: {\r\n                    x: x,\r\n                    y: y,\r\n                    width: width,\r\n                    height: height,\r\n                    left: left,\r\n                    top: top\r\n                  }\r\n                },\r\n                timeStamp: Date.now()\r\n              };\r\n              Object.defineProperty(event.nativeEvent, 'target', {\r\n                enumerable: true,\r\n                get: function get() {\r\n                  return entry.target;\r\n                }\r\n              });\r\n              onLayout(event);\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else if (!didWarn) {\r\n    if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\r\n      console.warn('onLayout relies on ResizeObserver which is not supported by your browser. ' + 'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');\r\n      didWarn = true;\r\n    }\r\n  }\r\n\r\n  return resizeObserver;\r\n}\r\n\r\nexport default function useElementLayout(ref, onLayout) {\r\n  var observer = getResizeObserver();\r\n  useLayoutEffect(function () {\r\n    var node = ref.current;\r\n\r\n    if (node != null) {\r\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\r\n    }\r\n  }, [ref, onLayout]); // Observing is done in a separate effect to avoid this effect running\r\n  // when 'onLayout' changes.\r\n\r\n  useLayoutEffect(function () {\r\n    var node = ref.current;\r\n\r\n    if (node != null && observer != null) {\r\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\r\n        observer.observe(node);\r\n      } else {\r\n        observer.unobserve(node);\r\n      }\r\n    }\r\n\r\n    return function () {\r\n      if (node != null && observer != null) {\r\n        observer.unobserve(node);\r\n      }\r\n    };\r\n  }, [ref, observer]);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}