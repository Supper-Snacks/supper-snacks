{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var countSlice = createSlice({\n  name: 'count',\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    incrementByOne: function incrementByOne(state) {\n      state.count += 1;\n    },\n    decrementByOne: function decrementByOne(state) {\n      state.count -= 1;\n    },\n    incrementByInput: function incrementByInput(state, action) {\n      state.count += action.payload.input;\n    },\n    decrementByInput: function decrementByInput(state, action) {\n      state.count -= action.payload.input;\n    }\n  }\n});\nvar _countSlice$actions = countSlice.actions,\n    incrementByOne = _countSlice$actions.incrementByOne,\n    decrementByOne = _countSlice$actions.decrementByOne,\n    incrementByInput = _countSlice$actions.incrementByInput,\n    decrementByInput = _countSlice$actions.decrementByInput;\nexport { incrementByOne, decrementByOne, incrementByInput, decrementByInput };\nexport default countSlice.reducer;","map":{"version":3,"names":["createSlice","countSlice","name","initialState","count","reducers","incrementByOne","state","decrementByOne","incrementByInput","action","payload","input","decrementByInput","actions","reducer"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/src/store/count.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const countSlice = createSlice({\r\n    name: 'count',\r\n    initialState: {\r\n        count: 0\r\n    },\r\n    reducers: {\r\n        incrementByOne: (state) => {\r\n            state.count += 1;\r\n        },\r\n        decrementByOne: (state) => {\r\n            state.count -= 1;\r\n        },\r\n        incrementByInput: (state, action) => {\r\n            state.count += action.payload.input;\r\n        },\r\n        decrementByInput: (state, action) => {\r\n            state.count -= action.payload.input;\r\n        },\r\n    }\r\n});\r\n\r\n// Export actions so that we can dispatch and invoke the functions from anywhere in our application\r\nexport const {\r\n    incrementByOne,\r\n    decrementByOne,\r\n    incrementByInput,\r\n    decrementByInput\r\n} = countSlice.actions;\r\nexport default countSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,UAAU,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,OAD4B;EAElCC,YAAY,EAAE;IACVC,KAAK,EAAE;EADG,CAFoB;EAKlCC,QAAQ,EAAE;IACNC,cAAc,EAAE,wBAACC,KAAD,EAAW;MACvBA,KAAK,CAACH,KAAN,IAAe,CAAf;IACH,CAHK;IAINI,cAAc,EAAE,wBAACD,KAAD,EAAW;MACvBA,KAAK,CAACH,KAAN,IAAe,CAAf;IACH,CANK;IAONK,gBAAgB,EAAE,0BAACF,KAAD,EAAQG,MAAR,EAAmB;MACjCH,KAAK,CAACH,KAAN,IAAeM,MAAM,CAACC,OAAP,CAAeC,KAA9B;IACH,CATK;IAUNC,gBAAgB,EAAE,0BAACN,KAAD,EAAQG,MAAR,EAAmB;MACjCH,KAAK,CAACH,KAAN,IAAeM,MAAM,CAACC,OAAP,CAAeC,KAA9B;IACH;EAZK;AALwB,CAAD,CAA9B;AAsBA,0BAKHX,UAAU,CAACa,OALR;AAAA,IACHR,cADG,uBACHA,cADG;AAAA,IAEHE,cAFG,uBAEHA,cAFG;AAAA,IAGHC,gBAHG,uBAGHA,gBAHG;AAAA,IAIHI,gBAJG,uBAIHA,gBAJG;;AAMP,eAAeZ,UAAU,CAACc,OAA1B"},"metadata":{},"sourceType":"module"}