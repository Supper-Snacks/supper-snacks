{"ast":null,"code":"import normalizeColor from \"../../modules/normalizeColor\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nexport default resolveShadowValue;","map":{"version":3,"names":["normalizeColor","normalizeValueWithProperty","defaultOffset","height","width","resolveShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/node_modules/react-native-web/dist/exports/StyleSheet/resolveShadowValue.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport normalizeColor from '../../modules/normalizeColor';\r\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\r\nvar defaultOffset = {\r\n  height: 0,\r\n  width: 0\r\n};\r\n\r\nvar resolveShadowValue = function resolveShadowValue(style) {\r\n  var shadowColor = style.shadowColor,\r\n      shadowOffset = style.shadowOffset,\r\n      shadowOpacity = style.shadowOpacity,\r\n      shadowRadius = style.shadowRadius;\r\n\r\n  var _ref = shadowOffset || defaultOffset,\r\n      height = _ref.height,\r\n      width = _ref.width;\r\n\r\n  var offsetX = normalizeValueWithProperty(width);\r\n  var offsetY = normalizeValueWithProperty(height);\r\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\r\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\r\n\r\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\r\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\r\n  }\r\n};\r\n\r\nexport default resolveShadowValue;"],"mappings":"AAQA,OAAOA,cAAP;AACA,OAAOC,0BAAP;AACA,IAAIC,aAAa,GAAG;EAClBC,MAAM,EAAE,CADU;EAElBC,KAAK,EAAE;AAFW,CAApB;;AAKA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;EAC1D,IAAIC,WAAW,GAAGD,KAAK,CAACC,WAAxB;EAAA,IACIC,YAAY,GAAGF,KAAK,CAACE,YADzB;EAAA,IAEIC,aAAa,GAAGH,KAAK,CAACG,aAF1B;EAAA,IAGIC,YAAY,GAAGJ,KAAK,CAACI,YAHzB;;EAKA,IAAIC,IAAI,GAAGH,YAAY,IAAIN,aAA3B;EAAA,IACIC,MAAM,GAAGQ,IAAI,CAACR,MADlB;EAAA,IAEIC,KAAK,GAAGO,IAAI,CAACP,KAFjB;;EAIA,IAAIQ,OAAO,GAAGX,0BAA0B,CAACG,KAAD,CAAxC;EACA,IAAIS,OAAO,GAAGZ,0BAA0B,CAACE,MAAD,CAAxC;EACA,IAAIW,UAAU,GAAGb,0BAA0B,CAACS,YAAY,IAAI,CAAjB,CAA3C;EACA,IAAIK,KAAK,GAAGf,cAAc,CAACO,WAAW,IAAI,OAAhB,EAAyBE,aAAzB,CAA1B;;EAEA,IAAIM,KAAK,IAAI,IAAT,IAAiBH,OAAO,IAAI,IAA5B,IAAoCC,OAAO,IAAI,IAA/C,IAAuDC,UAAU,IAAI,IAAzE,EAA+E;IAC7E,OAAOF,OAAO,GAAG,GAAV,GAAgBC,OAAhB,GAA0B,GAA1B,GAAgCC,UAAhC,GAA6C,GAA7C,GAAmDC,KAA1D;EACD;AACF,CAlBD;;AAoBA,eAAeV,kBAAf"},"metadata":{},"sourceType":"module"}