{"ast":null,"code":"'use strict';\n\nfunction setAndForwardRef(_ref) {\n  var getForwardedRef = _ref.getForwardedRef,\n      setLocalRef = _ref.setLocalRef;\n  return function forwardRef(ref) {\n    var forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nexport default setAndForwardRef;","map":{"version":3,"names":["setAndForwardRef","_ref","getForwardedRef","setLocalRef","forwardRef","ref","forwardedRef","current"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/node_modules/react-native-web/dist/vendor/react-native/Utilities/setAndForwardRef.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n'use strict';\r\n\r\n/**\r\n * This is a helper function for when a component needs to be able to forward a ref\r\n * to a child component, but still needs to have access to that component as part of\r\n * its implementation.\r\n *\r\n * Its main use case is in wrappers for native components.\r\n *\r\n * Usage:\r\n *\r\n *   class MyView extends React.Component {\r\n *     _nativeRef = null;\r\n *\r\n *     _setNativeRef = setAndForwardRef({\r\n *       getForwardedRef: () => this.props.forwardedRef,\r\n *       setLocalRef: ref => {\r\n *         this._nativeRef = ref;\r\n *       },\r\n *     });\r\n *\r\n *     render() {\r\n *       return <View ref={this._setNativeRef} />;\r\n *     }\r\n *   }\r\n *\r\n *   const MyViewWithRef = React.forwardRef((props, ref) => (\r\n *     <MyView {...props} forwardedRef={ref} />\r\n *   ));\r\n *\r\n *   module.exports = MyViewWithRef;\r\n */\r\nfunction setAndForwardRef(_ref) {\r\n  var getForwardedRef = _ref.getForwardedRef,\r\n      setLocalRef = _ref.setLocalRef;\r\n  return function forwardRef(ref) {\r\n    var forwardedRef = getForwardedRef();\r\n    setLocalRef(ref); // Forward to user ref prop (if one has been specified)\r\n\r\n    if (typeof forwardedRef === 'function') {\r\n      // Handle function-based refs. String-based refs are handled as functions.\r\n      forwardedRef(ref);\r\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\r\n      // Handle createRef-based refs\r\n      forwardedRef.current = ref;\r\n    }\r\n  };\r\n}\r\n\r\nexport default setAndForwardRef;"],"mappings":"AASA;;AAgCA,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;EAC9B,IAAIC,eAAe,GAAGD,IAAI,CAACC,eAA3B;EAAA,IACIC,WAAW,GAAGF,IAAI,CAACE,WADvB;EAEA,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;IAC9B,IAAIC,YAAY,GAAGJ,eAAe,EAAlC;IACAC,WAAW,CAACE,GAAD,CAAX;;IAEA,IAAI,OAAOC,YAAP,KAAwB,UAA5B,EAAwC;MAEtCA,YAAY,CAACD,GAAD,CAAZ;IACD,CAHD,MAGO,IAAI,OAAOC,YAAP,KAAwB,QAAxB,IAAoCA,YAAY,IAAI,IAAxD,EAA8D;MAEnEA,YAAY,CAACC,OAAb,GAAuBF,GAAvB;IACD;EACF,CAXD;AAYD;;AAED,eAAeL,gBAAf"},"metadata":{},"sourceType":"module"}