{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { MONOSPACE_FONT_STACK, SYSTEM_FONT_STACK, STYLE_SHORT_FORM_EXPANSIONS } from \"./constants\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar emptyObject = {};\nvar supportsCSS3TextDecoration = !canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\n\nvar mapTransform = function mapTransform(transform) {\n  var type = Object.keys(transform)[0];\n  var value = transform[type];\n\n  if (type === 'matrix' || type === 'matrix3d') {\n    return type + \"(\" + value.join(',') + \")\";\n  } else {\n    var normalizedValue = normalizeValueWithProperty(value, type);\n    return type + \"(\" + normalizedValue + \")\";\n  }\n};\n\nvar resolveTransform = function resolveTransform(resolvedStyle, style) {\n  var transform = style.transform;\n\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n\n  resolvedStyle.transform = transform;\n};\n\nvar createReactDOMStyle = function createReactDOMStyle(style) {\n  if (!style) {\n    return emptyObject;\n  }\n\n  var resolvedStyle = {};\n  Object.keys(style).sort().forEach(function (prop) {\n    var value = normalizeValueWithProperty(style[prop], prop);\n\n    if (value == null) {\n      return;\n    }\n\n    switch (prop) {\n      case 'elevation':\n      case 'overlayColor':\n      case 'resizeMode':\n      case 'tintColor':\n        {\n          break;\n        }\n\n      case 'aspectRatio':\n        {\n          resolvedStyle[prop] = value.toString();\n          break;\n        }\n\n      case 'backgroundClip':\n        {\n          if (value === 'text') {\n            resolvedStyle.backgroundClip = value;\n            resolvedStyle.WebkitBackgroundClip = value;\n          }\n\n          break;\n        }\n\n      case 'flex':\n        {\n          if (value === -1) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = 'auto';\n          } else {\n            resolvedStyle.flex = value;\n          }\n\n          break;\n        }\n\n      case 'font':\n        {\n          resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n          break;\n        }\n\n      case 'fontFamily':\n        {\n          if (value.indexOf('System') > -1) {\n            var stack = value.split(/,\\s*/);\n            stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n            resolvedStyle[prop] = stack.join(',');\n          } else if (value === 'monospace') {\n            resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n          } else {\n            resolvedStyle[prop] = value;\n          }\n\n          break;\n        }\n\n      case 'fontVariant':\n        {\n          if (Array.isArray(value) && value.length > 0) {\n            resolvedStyle.fontVariant = value.join(' ');\n          }\n\n          break;\n        }\n\n      case 'textAlignVertical':\n        {\n          resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n          break;\n        }\n\n      case 'textDecorationLine':\n        {\n          if (!supportsCSS3TextDecoration) {\n            resolvedStyle.textDecoration = value;\n          } else {\n            resolvedStyle.textDecorationLine = value;\n          }\n\n          break;\n        }\n\n      case 'transform':\n      case 'transformMatrix':\n        {\n          resolveTransform(resolvedStyle, style);\n          break;\n        }\n\n      case 'writingDirection':\n        {\n          resolvedStyle.direction = value;\n          break;\n        }\n\n      default:\n        {\n          var longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n\n          if (longFormProperties) {\n            longFormProperties.forEach(function (longForm, i) {\n              if (typeof style[longForm] === 'undefined') {\n                resolvedStyle[longForm] = value;\n              }\n            });\n          } else {\n            resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n          }\n        }\n    }\n  });\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;","map":{"version":3,"names":["canUseDOM","MONOSPACE_FONT_STACK","SYSTEM_FONT_STACK","STYLE_SHORT_FORM_EXPANSIONS","normalizeValueWithProperty","emptyObject","supportsCSS3TextDecoration","window","CSS","supports","mapTransform","transform","type","Object","keys","value","join","normalizedValue","resolveTransform","resolvedStyle","style","Array","isArray","map","createReactDOMStyle","sort","forEach","prop","toString","backgroundClip","WebkitBackgroundClip","flexGrow","flexShrink","flexBasis","flex","replace","indexOf","stack","split","length","fontVariant","verticalAlign","textDecoration","textDecorationLine","direction","longFormProperties","longForm","i"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/node_modules/react-native-web/dist/exports/StyleSheet/createReactDOMStyle.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\nimport { MONOSPACE_FONT_STACK, SYSTEM_FONT_STACK, STYLE_SHORT_FORM_EXPANSIONS } from './constants';\r\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\r\n/**\r\n * The browser implements the CSS cascade, where the order of properties is a\r\n * factor in determining which styles to paint. React Native is different. It\r\n * gives giving precedence to the more specific style property. For example,\r\n * the value of `paddingTop` takes precedence over that of `padding`.\r\n *\r\n * This module creates mutally exclusive style declarations by expanding all of\r\n * React Native's supported shortform properties (e.g. `padding`) to their\r\n * longfrom equivalents.\r\n */\r\n\r\nvar emptyObject = {};\r\nvar supportsCSS3TextDecoration = !canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\r\n/**\r\n * Transform\r\n */\r\n// { scale: 2 } => 'scale(2)'\r\n// { translateX: 20 } => 'translateX(20px)'\r\n// { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\r\n\r\nvar mapTransform = function mapTransform(transform) {\r\n  var type = Object.keys(transform)[0];\r\n  var value = transform[type];\r\n\r\n  if (type === 'matrix' || type === 'matrix3d') {\r\n    return type + \"(\" + value.join(',') + \")\";\r\n  } else {\r\n    var normalizedValue = normalizeValueWithProperty(value, type);\r\n    return type + \"(\" + normalizedValue + \")\";\r\n  }\r\n};\r\n\r\nvar resolveTransform = function resolveTransform(resolvedStyle, style) {\r\n  var transform = style.transform;\r\n\r\n  if (Array.isArray(style.transform)) {\r\n    transform = style.transform.map(mapTransform).join(' ');\r\n  }\r\n\r\n  resolvedStyle.transform = transform;\r\n};\r\n/**\r\n * Reducer\r\n */\r\n\r\n\r\nvar createReactDOMStyle = function createReactDOMStyle(style) {\r\n  if (!style) {\r\n    return emptyObject;\r\n  }\r\n\r\n  var resolvedStyle = {};\r\n  Object.keys(style).sort().forEach(function (prop) {\r\n    var value = normalizeValueWithProperty(style[prop], prop); // Ignore everything else with a null value\r\n\r\n    if (value == null) {\r\n      return;\r\n    }\r\n\r\n    switch (prop) {\r\n      // Ignore some React Native styles\r\n      case 'elevation':\r\n      case 'overlayColor':\r\n      case 'resizeMode':\r\n      case 'tintColor':\r\n        {\r\n          break;\r\n        }\r\n\r\n      case 'aspectRatio':\r\n        {\r\n          resolvedStyle[prop] = value.toString();\r\n          break;\r\n        }\r\n      // TODO: remove once this issue is fixed\r\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\r\n\r\n      case 'backgroundClip':\r\n        {\r\n          if (value === 'text') {\r\n            resolvedStyle.backgroundClip = value;\r\n            resolvedStyle.WebkitBackgroundClip = value;\r\n          }\r\n\r\n          break;\r\n        }\r\n      // The 'flex' property value in React Native must be a positive integer,\r\n      // 0, or -1.\r\n\r\n      case 'flex':\r\n        {\r\n          if (value === -1) {\r\n            resolvedStyle.flexGrow = 0;\r\n            resolvedStyle.flexShrink = 1;\r\n            resolvedStyle.flexBasis = 'auto';\r\n          } else {\r\n            resolvedStyle.flex = value;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case 'font':\r\n        {\r\n          resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\r\n          break;\r\n        }\r\n\r\n      case 'fontFamily':\r\n        {\r\n          if (value.indexOf('System') > -1) {\r\n            var stack = value.split(/,\\s*/);\r\n            stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\r\n            resolvedStyle[prop] = stack.join(',');\r\n          } else if (value === 'monospace') {\r\n            resolvedStyle[prop] = MONOSPACE_FONT_STACK;\r\n          } else {\r\n            resolvedStyle[prop] = value;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case 'fontVariant':\r\n        {\r\n          if (Array.isArray(value) && value.length > 0) {\r\n            resolvedStyle.fontVariant = value.join(' ');\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case 'textAlignVertical':\r\n        {\r\n          resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\r\n          break;\r\n        }\r\n\r\n      case 'textDecorationLine':\r\n        {\r\n          // use 'text-decoration' for browsers that only support CSS2\r\n          // text-decoration (e.g., IE, Edge)\r\n          if (!supportsCSS3TextDecoration) {\r\n            resolvedStyle.textDecoration = value;\r\n          } else {\r\n            resolvedStyle.textDecorationLine = value;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case 'transform':\r\n      case 'transformMatrix':\r\n        {\r\n          resolveTransform(resolvedStyle, style);\r\n          break;\r\n        }\r\n\r\n      case 'writingDirection':\r\n        {\r\n          resolvedStyle.direction = value;\r\n          break;\r\n        }\r\n\r\n      default:\r\n        {\r\n          var longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\r\n\r\n          if (longFormProperties) {\r\n            longFormProperties.forEach(function (longForm, i) {\r\n              // The value of any longform property in the original styles takes\r\n              // precedence over the shortform's value.\r\n              if (typeof style[longForm] === 'undefined') {\r\n                resolvedStyle[longForm] = value;\r\n              }\r\n            });\r\n          } else {\r\n            resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\r\n          }\r\n        }\r\n    }\r\n  });\r\n  return resolvedStyle;\r\n};\r\n\r\nexport default createReactDOMStyle;"],"mappings":"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"},"metadata":{},"sourceType":"module"}