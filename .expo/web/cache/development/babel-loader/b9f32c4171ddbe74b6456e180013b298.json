{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar Ex2Solution = function Ex2Solution() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isValidInput = _useState8[0],\n      setIsValidInput = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      response = _useState10[0],\n      setResponse = _useState10[1];\n\n  var signUpHandler = function signUpHandler() {\n    if (name.length === 0 || email.length === 0 || password.length === 0) {\n      setResponse('');\n      setIsValidInput(false);\n      Keyboard.dismiss();\n      return;\n    }\n\n    setName('');\n    setEmail('');\n    setPassword('');\n    setResponse('Sign Up Successful');\n    setIsValidInput(true);\n    Keyboard.dismiss();\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: {\n        uri: 'https://www.nus.edu.sg/images/default-source/base/logo.png'\n      },\n      resizeMode: \"contain\",\n      style: styles.image\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        onChangeText: setName,\n        value: name,\n        placeholder: \"Name\",\n        style: styles.input,\n        selectionColor: \"#003D7C\"\n      }), _jsx(TextInput, {\n        onChangeText: setEmail,\n        value: email,\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        selectionColor: \"#003D7C\",\n        style: styles.input\n      }), _jsx(TextInput, {\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        selectionColor: \"#003D7C\",\n        style: styles.input\n      }), _jsx(Pressable, {\n        onPress: signUpHandler,\n        style: styles.button,\n        android_ripple: {\n          color: '#FFF'\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign Up\"\n        })\n      })]\n    }), isValidInput && _jsx(Text, {\n      style: styles.responseText,\n      children: response\n    })]\n  });\n};\n\nexport default Ex2Solution;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#EBECF0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: width * 0.6,\n    height: 240,\n    alignSelf: 'center'\n  },\n  inputContainer: {\n    alignItems: 'center'\n  },\n  input: {\n    marginVertical: 4,\n    width: 200,\n    height: 30,\n    borderColor: 'black',\n    borderWidth: 2,\n    paddingHorizontal: 8\n  },\n  button: {\n    backgroundColor: '#003D7C',\n    marginTop: 46,\n    paddingHorizontal: 5,\n    paddingVertical: 8,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 12,\n    color: 'white'\n  },\n  responseText: {\n    color: 'green',\n    fontSize: 20,\n    marginTop: 40\n  }\n});","map":{"version":3,"names":["React","useState","Dimensions","get","width","Ex2Solution","name","setName","email","setEmail","password","setPassword","isValidInput","setIsValidInput","response","setResponse","signUpHandler","length","Keyboard","dismiss","styles","container","uri","image","inputContainer","input","button","color","buttonText","responseText","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","height","alignSelf","marginVertical","borderColor","borderWidth","paddingHorizontal","marginTop","paddingVertical","borderRadius","fontSize"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/src/screens/Ex2Solution.js"],"sourcesContent":["import {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Image,\r\n    Pressable,\r\n    TextInput,\r\n    Dimensions,\r\n    Keyboard\r\n} from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\nconst Ex2Solution = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isValidInput, setIsValidInput] = useState(false);\r\n    const [response, setResponse] = useState('');\r\n\r\n    const signUpHandler = () => {\r\n        if (name.length === 0 || email.length === 0 || password.length === 0) {\r\n            setResponse('');\r\n            setIsValidInput(false);\r\n            Keyboard.dismiss();\r\n\r\n            return;\r\n        }\r\n\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setResponse('Sign Up Successful');\r\n        setIsValidInput(true);\r\n        Keyboard.dismiss();\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image\r\n                source={{\r\n                    uri: 'https://www.nus.edu.sg/images/default-source/base/logo.png'\r\n                }}\r\n                resizeMode='contain'\r\n                style={styles.image}\r\n            />\r\n            <View style={styles.inputContainer}>\r\n                <TextInput\r\n                    onChangeText={setName}\r\n                    value={name}\r\n                    placeholder='Name'\r\n                    style={styles.input}\r\n                    selectionColor='#003D7C'\r\n                />\r\n                <TextInput\r\n                    onChangeText={setEmail}\r\n                    value={email}\r\n                    placeholder='Email'\r\n                    keyboardType='email-address'\r\n                    selectionColor='#003D7C'\r\n                    style={styles.input}\r\n                />\r\n                <TextInput\r\n                    onChangeText={setPassword}\r\n                    value={password}\r\n                    placeholder='Password'\r\n                    secureTextEntry={true}\r\n                    selectionColor='#003D7C'\r\n                    style={styles.input}\r\n                />\r\n                <Pressable\r\n                    onPress={signUpHandler}\r\n                    style={styles.button}\r\n                    android_ripple={{ color: '#FFF' }}\r\n                >\r\n                    <Text style={styles.buttonText}>Sign Up</Text>\r\n                </Pressable>\r\n            </View>\r\n            {isValidInput && (\r\n                <Text style={styles.responseText}>{response}</Text>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Ex2Solution;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#EBECF0',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    image: {\r\n        width: width * 0.6,\r\n        height: 240,\r\n        alignSelf: 'center'\r\n    },\r\n    inputContainer: {\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        marginVertical: 4,\r\n        width: 200,\r\n        height: 30,\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        paddingHorizontal: 8\r\n    },\r\n    button: {\r\n        backgroundColor: '#003D7C',\r\n        marginTop: 46, // Deducting off from the marginBottom of input i.e. 4dp\r\n        paddingHorizontal: 5,\r\n        paddingVertical: 8,\r\n        borderRadius: 5\r\n    },\r\n    buttonText: {\r\n        fontSize: 12,\r\n        color: 'white'\r\n    },\r\n    responseText: {\r\n        color: 'green',\r\n        fontSize: 20,\r\n        marginTop: 40\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}