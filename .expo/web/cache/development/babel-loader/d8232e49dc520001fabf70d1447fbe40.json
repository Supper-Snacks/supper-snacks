{"ast":null,"code":"'use strict';\n\nimport _bezier from \"./bezier\";\n\nvar _ease;\n\nvar Easing = function () {\n  function Easing() {}\n\n  Easing.step0 = function step0(n) {\n    return n > 0 ? 1 : 0;\n  };\n\n  Easing.step1 = function step1(n) {\n    return n >= 1 ? 1 : 0;\n  };\n\n  Easing.linear = function linear(t) {\n    return t;\n  };\n\n  Easing.ease = function ease(t) {\n    if (!_ease) {\n      _ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n\n    return _ease(t);\n  };\n\n  Easing.quad = function quad(t) {\n    return t * t;\n  };\n\n  Easing.cubic = function cubic(t) {\n    return t * t * t;\n  };\n\n  Easing.poly = function poly(n) {\n    return function (t) {\n      return Math.pow(t, n);\n    };\n  };\n\n  Easing.sin = function sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  };\n\n  Easing.circle = function circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  };\n\n  Easing.exp = function exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  };\n\n  Easing.elastic = function elastic(bounciness) {\n    if (bounciness === void 0) {\n      bounciness = 1;\n    }\n\n    var p = bounciness * Math.PI;\n    return function (t) {\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n    };\n  };\n\n  Easing.back = function back(s) {\n    if (s === void 0) {\n      s = 1.70158;\n    }\n\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  };\n\n  Easing.bounce = function bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      var _t = t - 1.5 / 2.75;\n\n      return 7.5625 * _t * _t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      var _t2 = t - 2.25 / 2.75;\n\n      return 7.5625 * _t2 * _t2 + 0.9375;\n    }\n\n    var t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  };\n\n  Easing.bezier = function bezier(x1, y1, x2, y2) {\n    return _bezier(x1, y1, x2, y2);\n  };\n\n  Easing.in = function _in(easing) {\n    return easing;\n  };\n\n  Easing.out = function out(easing) {\n    return function (t) {\n      return 1 - easing(1 - t);\n    };\n  };\n\n  Easing.inOut = function inOut(easing) {\n    return function (t) {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  };\n\n  return Easing;\n}();\n\nexport default Easing;","map":{"version":3,"names":["_bezier","_ease","Easing","step0","n","step1","linear","t","ease","bezier","quad","cubic","poly","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","p","back","s","bounce","_t","_t2","t2","x1","y1","x2","y2","in","_in","easing","out","inOut"],"sources":["C:/Users/guokw/OneDrive/Documents/supper-snacks/node_modules/react-native-web/dist/vendor/react-native/Animated/Easing.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n'use strict';\r\n\r\nimport _bezier from './bezier';\r\n\r\nvar _ease;\r\n/**\r\n * The `Easing` module implements common easing functions. This module is used\r\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\r\n * believable motion in animations.\r\n *\r\n * You can find a visualization of some common easing functions at\r\n * http://easings.net/\r\n *\r\n * ### Predefined animations\r\n *\r\n * The `Easing` module provides several predefined animations through the\r\n * following methods:\r\n *\r\n * - [`back`](docs/easing.html#back) provides a simple animation where the\r\n *   object goes slightly back before moving forward\r\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\r\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\r\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\r\n *\r\n * ### Standard functions\r\n *\r\n * Three standard easing functions are provided:\r\n *\r\n * - [`linear`](docs/easing.html#linear)\r\n * - [`quad`](docs/easing.html#quad)\r\n * - [`cubic`](docs/easing.html#cubic)\r\n *\r\n * The [`poly`](docs/easing.html#poly) function can be used to implement\r\n * quartic, quintic, and other higher power functions.\r\n *\r\n * ### Additional functions\r\n *\r\n * Additional mathematical functions are provided by the following methods:\r\n *\r\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\r\n * - [`circle`](docs/easing.html#circle) provides a circular function\r\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\r\n * - [`exp`](docs/easing.html#exp) provides an exponential function\r\n *\r\n * The following helpers are used to modify other easing functions.\r\n *\r\n * - [`in`](docs/easing.html#in) runs an easing function forwards\r\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\r\n * - [`out`](docs/easing.html#out) runs an easing function backwards\r\n */\r\n\r\n\r\nvar Easing = /*#__PURE__*/function () {\r\n  function Easing() {}\r\n\r\n  /**\r\n   * A stepping function, returns 1 for any positive value of `n`.\r\n   */\r\n  Easing.step0 = function step0(n) {\r\n    return n > 0 ? 1 : 0;\r\n  }\r\n  /**\r\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\r\n   */\r\n  ;\r\n\r\n  Easing.step1 = function step1(n) {\r\n    return n >= 1 ? 1 : 0;\r\n  }\r\n  /**\r\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\r\n   * one.\r\n   *\r\n   * http://cubic-bezier.com/#0,0,1,1\r\n   */\r\n  ;\r\n\r\n  Easing.linear = function linear(t) {\r\n    return t;\r\n  }\r\n  /**\r\n   * A simple inertial interaction, similar to an object slowly accelerating to\r\n   * speed.\r\n   *\r\n   * http://cubic-bezier.com/#.42,0,1,1\r\n   */\r\n  ;\r\n\r\n  Easing.ease = function ease(t) {\r\n    if (!_ease) {\r\n      _ease = Easing.bezier(0.42, 0, 1, 1);\r\n    }\r\n\r\n    return _ease(t);\r\n  }\r\n  /**\r\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\r\n   * time.\r\n   *\r\n   * http://easings.net/#easeInQuad\r\n   */\r\n  ;\r\n\r\n  Easing.quad = function quad(t) {\r\n    return t * t;\r\n  }\r\n  /**\r\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\r\n   * time.\r\n   *\r\n   * http://easings.net/#easeInCubic\r\n   */\r\n  ;\r\n\r\n  Easing.cubic = function cubic(t) {\r\n    return t * t * t;\r\n  }\r\n  /**\r\n   * A power function. Position is equal to the Nth power of elapsed time.\r\n   *\r\n   * n = 4: http://easings.net/#easeInQuart\r\n   * n = 5: http://easings.net/#easeInQuint\r\n   */\r\n  ;\r\n\r\n  Easing.poly = function poly(n) {\r\n    return function (t) {\r\n      return Math.pow(t, n);\r\n    };\r\n  }\r\n  /**\r\n   * A sinusoidal function.\r\n   *\r\n   * http://easings.net/#easeInSine\r\n   */\r\n  ;\r\n\r\n  Easing.sin = function sin(t) {\r\n    return 1 - Math.cos(t * Math.PI / 2);\r\n  }\r\n  /**\r\n   * A circular function.\r\n   *\r\n   * http://easings.net/#easeInCirc\r\n   */\r\n  ;\r\n\r\n  Easing.circle = function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n  }\r\n  /**\r\n   * An exponential function.\r\n   *\r\n   * http://easings.net/#easeInExpo\r\n   */\r\n  ;\r\n\r\n  Easing.exp = function exp(t) {\r\n    return Math.pow(2, 10 * (t - 1));\r\n  }\r\n  /**\r\n   * A simple elastic interaction, similar to a spring oscillating back and\r\n   * forth.\r\n   *\r\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\r\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\r\n   * times.\r\n   *\r\n   * http://easings.net/#easeInElastic\r\n   */\r\n  ;\r\n\r\n  Easing.elastic = function elastic(bounciness) {\r\n    if (bounciness === void 0) {\r\n      bounciness = 1;\r\n    }\r\n\r\n    var p = bounciness * Math.PI;\r\n    return function (t) {\r\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\r\n    };\r\n  }\r\n  /**\r\n   * Use with `Animated.parallel()` to create a simple effect where the object\r\n   * animates back slightly as the animation starts.\r\n   *\r\n   * Wolfram Plot:\r\n   *\r\n   * - http://tiny.cc/back_default (s = 1.70158, default)\r\n   */\r\n  ;\r\n\r\n  Easing.back = function back(s) {\r\n    if (s === void 0) {\r\n      s = 1.70158;\r\n    }\r\n\r\n    return function (t) {\r\n      return t * t * ((s + 1) * t - s);\r\n    };\r\n  }\r\n  /**\r\n   * Provides a simple bouncing effect.\r\n   *\r\n   * http://easings.net/#easeInBounce\r\n   */\r\n  ;\r\n\r\n  Easing.bounce = function bounce(t) {\r\n    if (t < 1 / 2.75) {\r\n      return 7.5625 * t * t;\r\n    }\r\n\r\n    if (t < 2 / 2.75) {\r\n      var _t = t - 1.5 / 2.75;\r\n\r\n      return 7.5625 * _t * _t + 0.75;\r\n    }\r\n\r\n    if (t < 2.5 / 2.75) {\r\n      var _t2 = t - 2.25 / 2.75;\r\n\r\n      return 7.5625 * _t2 * _t2 + 0.9375;\r\n    }\r\n\r\n    var t2 = t - 2.625 / 2.75;\r\n    return 7.5625 * t2 * t2 + 0.984375;\r\n  }\r\n  /**\r\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\r\n   * `transition-timing-function`.\r\n   *\r\n   * A useful tool to visualize cubic bezier curves can be found at\r\n   * http://cubic-bezier.com/\r\n   */\r\n  ;\r\n\r\n  Easing.bezier = function bezier(x1, y1, x2, y2) {\r\n    return _bezier(x1, y1, x2, y2);\r\n  }\r\n  /**\r\n   * Runs an easing function forwards.\r\n   */\r\n  ;\r\n\r\n  Easing.in = function _in(easing) {\r\n    return easing;\r\n  }\r\n  /**\r\n   * Runs an easing function backwards.\r\n   */\r\n  ;\r\n\r\n  Easing.out = function out(easing) {\r\n    return function (t) {\r\n      return 1 - easing(1 - t);\r\n    };\r\n  }\r\n  /**\r\n   * Makes any easing function symmetrical. The easing function will run\r\n   * forwards for half of the duration, then backwards for the rest of the\r\n   * duration.\r\n   */\r\n  ;\r\n\r\n  Easing.inOut = function inOut(easing) {\r\n    return function (t) {\r\n      if (t < 0.5) {\r\n        return easing(t * 2) / 2;\r\n      }\r\n\r\n      return 1 - easing((1 - t) * 2) / 2;\r\n    };\r\n  };\r\n\r\n  return Easing;\r\n}();\r\n\r\nexport default Easing;"],"mappings":"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"},"metadata":{},"sourceType":"module"}